#=================================================
# https://github.com/P3TERX/Actions-OpenWrt
# Description: Repack HelmiWrt OS for s905x devices using GitHub Actions
# Lisence: MIT
# Repacker : Raditya Budi Handoko <https://github.com/radityabh>
# HelmiWrt OS by helmiau.com
#=================================================

name: Build Amlogic s9xxx 21.02

on:
  workflow_dispatch:
#  schedule:
#    - cron: 59 23 * * *
#  watch:
#    types: started

env:
  REPO_URL: https://github.com/helmiau/Amlogic-Openwrt.git
  REPO_BRANCH: main
  PROC_LISTS: s905x3_s905x2_s905x_s905x-b860h_s905w_s905d_s922x_s912_s905_s905l2_s905l3_s905l3a_s905l3b
  KERNEL_VR: 5.4.238_5.15.104_6.1.21
  SOURCE_BRANCH: 21.02
  UPLOAD_RELEASE: true
  TZ: Asia/Jakarta

jobs:
  Build:
    runs-on: ubuntu-22.04

    steps:
    - name: Checkout
      uses: actions/checkout@main

    - name: Initialization Environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install $(curl -fsSL https://is.gd/depend_ubuntu2204_openwrt)
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        sudo timedatectl set-timezone "$TZ"
        sudo mkdir -p /workdir
        sudo chown $USER:$GROUPS /workdir
        echo "COMPILE_STARTINGTIME=$(date +"%Y.%m.%d.%H:%M")" >> $GITHUB_ENV
        export BUILD_DATE=$(curl -sL https://api.github.com/repos/helmiau/HelmiWrt-OS-Immortal/releases | jq -r '.[0] | .tag_name' | sed 's/helmiwrt-//g')
        echo "BUILD_DATE=$BUILD_DATE" >> $GITHUB_ENV
        git config --global credential.helper store
        git clone https://$GITHUB_REPOSITORY_OWNER:${{ secrets.HELMIWRT_RW }}@github.com/$GITHUB_REPOSITORY_OWNER/HelmiWrt-Plus.git filex
        export UP_USERNEW=$( grep new_user filex/up_info.txt | sed 's/new_user=//g' )
        echo "UP_USERNEW=$UP_USERNEW" >> $GITHUB_ENV
        export UP_NEW=$( grep new_repo filex/up_info.txt | sed 's/new_repo=//g' )
        echo "UP_NEW=$UP_NEW" >> $GITHUB_ENV
        rm -rf filex
        export HELMIWRT_REL="https://github.com/$UP_USERNEW/$UP_NEW/releases/download/helmiwrt"
        echo "HELMIWRT_REL=$HELMIWRT_REL" >> $GITHUB_ENV
        export SOURCE_BRANCH=$SOURCE_BRANCH
        echo "SOURCE_BRANCH=$SOURCE_BRANCH" >> $GITHUB_ENV

    - name: Cloning Source
      working-directory: /workdir
      run: |
        df -hT $PWD
        git clone --depth 1 $REPO_URL -b $REPO_BRANCH openwrt
        ln -sf /workdir/openwrt $GITHUB_WORKSPACE/openwrt

    - name: Install Feeds
      id: feeds
      run: |
        cd openwrt
        echo "OPENWRTROOT=$PWD" >> $GITHUB_ENV

    - name: Building HelmiWrt
      id: build
      run: |
        cd $OPENWRTROOT
        # Get ROOTFS size from helmiwrt build config
        export ROOTFS_SIZE="$(curl -v --silent https://raw.githubusercontent.com/helmiau/HelmiWrt-OS-Immortal/main/config/universal.config 2>&1 | grep 'CONFIG_TARGET_ROOTFS_PARTSIZE=' | sed 's|CONFIG_TARGET_ROOTFS_PARTSIZE=||g')"
        echo "ROOTFS_SIZE=$ROOTFS_SIZE" >> $GITHUB_ENV
        # Output build name
        sed -i "/HelmiWrt_/c\ build_image_file=\"${out_path}/helmiwrt-$SOURCE_BRANCH-\${board}-k\${kernel}.img\"" make
        grep "build_image_file=" make
        # Start Build s9xxx based on $SOURCE_BRANCH source.
        export HELMIWRT_FILENAME="helmiwrt-$SOURCE_BRANCH-armvirt-64-default-rootfs.tar.gz"
        echo "HELMIWRT_FILENAME=$HELMIWRT_FILENAME" >> $GITHUB_ENV
        if wget -q --method=HEAD "$HELMIWRT_REL-$BUILD_DATE/$HELMIWRT_FILENAME"; then
          # Download Firmware $SOURCE_BRANCH
          echo "$HELMIWRT_FILENAME rootfs found under $BUILD_DATE tag! Start downloading..."
          [ -d openwrt-armvirt ] || mkdir -p openwrt-armvirt
          wget -q -P openwrt-armvirt "$HELMIWRT_REL-$BUILD_DATE/$HELMIWRT_FILENAME"
          # Build Firmware $SOURCE_BRANCH
          sudo chmod +x make
          sudo ./make -b $PROC_LISTS -k $KERNEL_VR -s $ROOTFS_SIZE -a false
          export PACKAGED_OUTPUTPATH="${PWD}/out"
          echo "PACKAGED_OUTPUTPATH=$PACKAGED_OUTPUTPATH" >> $GITHUB_ENV
          find . -type f -name 'helmiwrt-s*' | while read FILE ; do
            newfile=$(echo ${FILE} | sed "s/helmiwrt/helmiwrt-$SOURCE_BRANCH/") ;
            echo -e $(readlink -f ${FILE}) ;
            mv "${FILE}" "${newfile}" ;
            echo -e $(readlink -f ${FILE}) ;
          done
          echo "status=success" >> $GITHUB_OUTPUT
        fi

    - name: Upload Firmware Files to GitHub Release
      uses: ncipollo/release-action@v1.12.0
      if: steps.build.outputs.status == 'success' && !cancelled()
      with:
        prerelease: true
        allowUpdates: true
        replacesArtifacts: true
        owner: ${{ env.UP_USERNEW }}
        repo: ${{ env.UP_NEW }}
        name: HelmiWrt OS ${{ env.BUILD_DATE }}
        token: ${{ secrets.HELMIWRT_RW }}
        tag: helmiwrt-${{ env.BUILD_DATE }}
        artifacts: ${{ env.PACKAGED_OUTPUTPATH }}/helmiwrt-*
        bodyFile: release_body.txt

    - name: Upload RootFS File to Current Repo
      uses: ncipollo/release-action@v1.12.0
      if: steps.build.outputs.status == 'success' && !cancelled()
      with:
        prerelease: true
        allowUpdates: true
        replacesArtifacts: true
        owner: helmiau
        repo: HelmiWrt-OS-Immortal
        name: HelmiWrt OS ${{ env.BUILD_DATE }}
        token: ${{ secrets.HELMIWRT_RW }}
        tag: helmiwrt-${{ env.BUILD_DATE }}
        artifacts: ${{ env.OPENWRTROOT }}/openwrt-armvirt/${{ env.HELMIWRT_FILENAME }}
        bodyFile: release_body.txt
