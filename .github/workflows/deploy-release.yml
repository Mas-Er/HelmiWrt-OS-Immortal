#=================================================
# Title: Batch Trigger Build
# Description: This actions will run another workflows with delay from "$DELAY_INT" environment
# Lisence: MIT
# Author: helmiau
# Blog: https://helmiau.com
#=================================================

name: Deploy Releases

on:
  workflow_dispatch:
#  schedule:
#    - cron: 0 17 * * *
#  watch:
#    types: started

env:
  REPO_OWNER: helmiau

jobs:
  Deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@main

      - name: Set Timezone to Asia Jakarta
        uses: szenius/set-timezone@master
        with:
          timezoneLinux: "Asia/Jakarta"

      - name: Load HelmiWrt Mods
        id: mods
        run: |
          mkdir -p workspace
          cd workspace
          git config --global credential.helper store
          git clone https://$GITHUB_REPOSITORY_OWNER:${{ secrets.HELMIWRT_RW }}@github.com/$GITHUB_REPOSITORY_OWNER/HelmiWrt-Plus.git filex
          export UP_USEROLD=$( grep old_user filex/up_info.txt | sed 's/old_user=//g' )
          echo "UP_USEROLD=$UP_USEROLD" >> $GITHUB_ENV
          export UP_USERNEW=$( grep new_user filex/up_info.txt | sed 's/new_user=//g' )
          echo "UP_USERNEW=$UP_USERNEW" >> $GITHUB_ENV
          export UP_OLD=$( grep old_repo filex/up_info.txt | sed 's/old_repo=//g' )
          echo "UP_OLD=$UP_OLD" >> $GITHUB_ENV
          export UP_NEW=$( grep new_repo filex/up_info.txt | sed 's/new_repo=//g' )
          echo "UP_NEW=$UP_NEW" >> $GITHUB_ENV
          export UP_PASS_OLD=$( grep old_fw_pass filex/up_info.txt | sed 's/old_fw_pass=//g' )
          echo "UP_PASS_OLD=$UP_PASS_OLD" >> $GITHUB_ENV
          export UP_PASS_NEW=$( grep new_fw_pass filex/up_info.txt | sed 's/new_fw_pass=//g' )
          echo "UP_PASS_NEW=$UP_PASS_NEW" >> $GITHUB_ENV
          export UP_LIST_PASS_OLD=$( grep old_fw_pass filex/up_info.txt | sed 's/old_list_pass=//g' )
          echo "UP_LIST_PASS_OLD=$UP_LIST_PASS_OLD" >> $GITHUB_ENV
          export UP_LIST_PASS_NEW=$( grep new_fw_pass filex/up_info.txt | sed 's/new_list_pass=//g' )
          echo "UP_LIST_PASS_NEW=$UP_LIST_PASS_NEW" >> $GITHUB_ENV
          export UP_DEL_OLD=$( grep old_del filex/up_info.txt | sed 's/old_del=//g' )
          echo "UP_DEL_OLD=$UP_DEL_OLD" >> $GITHUB_ENV
          export OLD_BUILD_DATE=$(curl -sL https://api.github.com/repos/helmiau/HelmiWrt-OS-Immortal/releases | jq -r '.[1] | .tag_name' | sed 's/helmiwrt-//g')
          echo "OLD_BUILD_DATE=$OLD_BUILD_DATE" >> $GITHUB_ENV
          export BUILD_DATE=$(curl -sL https://api.github.com/repos/helmiau/HelmiWrt-OS-Immortal/releases | jq -r '.[0] | .tag_name' | sed 's/helmiwrt-//g')
          echo "BUILD_DATE=$BUILD_DATE" >> $GITHUB_ENV
          #####################
          export BSITE=$( grep blog_site filex/up_info.txt | sed 's/blog_site=//g' )
          echo "BSITE=$BSITE" >> $GITHUB_ENV
          export BPOST=$( grep blog_post filex/up_info.txt | sed 's/blog_post=//g' )
          echo "BPOST=$BPOST" >> $GITHUB_ENV
          export BRAW=$( grep blog_raw filex/up_info.txt | sed 's/blog_raw=//g' )
          echo "BRAW=$BRAW" >> $GITHUB_ENV
          export BMAIL=$( grep mailku filex/up_info.txt | sed 's/mailku=//g' )
          echo "BMAIL=$BMAIL" >> $GITHUB_ENV
          #####################
          rm -rf filex
          wget $BRAW/$BPOST
          sed -i "s|$UP_USEROLD/$UP_OLD|$UP_USERNEW/$UP_NEW|g" $BPOST
          sleep 3
          sed -i "s|$UP_LIST_PASS_OLD|$UP_LIST_PASS_NEW|g" $BPOST
          sleep 3
          sed -i "s|$UP_PASS_OLD|$UP_PASS_NEW|g" $BPOST
          sleep 10
          echo "Mods loaded succesfully, resuming build"
          echo "status=success" >> $GITHUB_OUTPUT

      - name: Pushing Content Update
        if: steps.mods.outputs.status == 'success' && !cancelled()
        uses: dmnemec/copy_file_to_another_repo_action@main
        env:
          API_TOKEN_GITHUB: ${{ secrets.HELMIWRT_RW }}
        with:
          source_file: workspace/${{ env.BPOST }}
          destination_repo: ${{ env.REPO_OWNER }}/${{ env.BSITE }}
          destination_folder: '_posts'
          destination_branch: master
          user_email: ${{ env.BMAIL }}
          user_name: ${{ env.REPO_OWNER }}
          commit_message: 'Update HelmiWrt OS posts'

      - name: Publish Release
        uses: ncipollo/release-action@v1.12.0
        with:
          prerelease: false
          allowUpdates: true
          replacesArtifacts: true
          owner: ${{ env.UP_USERNEW }}
          repo: ${{ env.UP_NEW }}
          name: HelmiWrt OS ${{ env.BUILD_DATE }}
          token: ${{ secrets.HELMIWRT_RW }}
          tag: helmiwrt-${{ env.BUILD_DATE }}
          artifacts: release_body.txt
          bodyFile: release_body.txt

      - name: Delete Older Release
        if: ${{ env.UP_DEL_OLD == 'true' }}
        uses: dev-drprasad/delete-tag-and-release@master
        env:
          GITHUB_TOKEN: ${{ secrets.HELMIWRT_RW }}
        with:
          delete_release: true
          tag_name: helmiwrt-${{ env.OLD_BUILD_DATE }}
          repo: ${{ env.UP_USEROLD }}/${{ env.UP_OLD }}

  Commit:
    needs: [Deploy]
    name: Generate Commit for ${{ matrix.BSITE }} Repo
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - BSITE: dl1
          - BSITE: dl2
          - BSITE: dl3
          - BSITE: dl4
          - BSITE: dl5
          - BSITE: dl6
          - BSITE: dl7
          - BSITE: dl8
          - BSITE: dl9
          - BSITE: dl10
          - BSITE: dl11
          - BSITE: dl12
          - BSITE: dl13
          - BSITE: dl14
          - BSITE: dl15
          - BSITE: dl16
          - BSITE: dl17
          - BSITE: dl18
          - BSITE: dl19
          - BSITE: dl20
          - BSITE: dl21
          - BSITE: dl22
          - BSITE: dl23
          - BSITE: dl24
          - BSITE: dl25
          - BSITE: dl26
          - BSITE: dl27
          - BSITE: dl28
          - BSITE: dl29
          - BSITE: dl30
          - BSITE: dl31
          - BSITE: dl32
          - BSITE: dl33
          - BSITE: dl34
          - BSITE: dl35
          - BSITE: dl36
          - BSITE: dl37
          - BSITE: dl38
          - BSITE: dl39
          - BSITE: dl40
          - BSITE: dl41
          - BSITE: dl42
          - BSITE: dl43
          - BSITE: dl44
          - BSITE: dl45
          - BSITE: dl46
          - BSITE: dl47
          - BSITE: dl48
          - BSITE: dl49
          - BSITE: dl50

    steps:
      - name: Checkout
        uses: actions/checkout@main

      - name: Set Timezone to Asia Jakarta
        uses: szenius/set-timezone@master
        with:
          timezoneLinux: "Asia/Jakarta"

      - name: Create Dummy Text
        id: reforged
        run: |
          mkdir -p $GITHUB_WORKSPACE/workspace
          cd $GITHUB_WORKSPACE/workspace
          git config --global credential.helper store
          git clone https://$GITHUB_REPOSITORY_OWNER:${{ secrets.HELMIWRT_RW }}@github.com/$GITHUB_REPOSITORY_OWNER/HelmiWrt-Plus.git filex
          export UP_USEROLD=$( grep old_user filex/up_info.txt | sed 's/old_user=//g' )
          echo "UP_USEROLD=$UP_USEROLD" >> $GITHUB_ENV
          export UP_USERNEW=$( grep new_user filex/up_info.txt | sed 's/new_user=//g' )
          echo "UP_USERNEW=$UP_USERNEW" >> $GITHUB_ENV
          export BUILD_DATE=$(curl -sL https://api.github.com/repos/helmiau/HelmiWrt-OS-Immortal/releases | jq -r '.[0] | .tag_name' | sed 's/helmiwrt-//g')
          echo "BUILD_DATE=$BUILD_DATE" >> $GITHUB_ENV
          #####################
          export BMAIL=$( grep mailku filex/up_info.txt | sed 's/mailku=//g' )
          echo "BMAIL=$BMAIL" >> $GITHUB_ENV
          #####################
          rm -rf filex
          echo -e "Next build will be released" > README.md
          echo "Mods loaded succesfully, resuming build"
          echo "status=success" >> $GITHUB_OUTPUT

      - name: Pushing Dummy Commit to ${{ matrix.BSITE }} Repo
        if: steps.reforged.outputs.status == 'success' && !cancelled()
        uses: dmnemec/copy_file_to_another_repo_action@main
        env:
          API_TOKEN_GITHUB: ${{ secrets.HELMIWRT_RW }}
        with:
          source_file: workspace/README.md
          destination_repo: ${{ env.UP_USERNEW }}/${{ matrix.BSITE }}
          destination_branch: main
          user_email: ${{ env.BMAIL }}
          user_name: ${{ env.REPO_OWNER }}
          commit_message: 'Update Dummy Commit ${{ env.BUILD_DATE }}'

      - name: Load HelmiWrt Mods
        id: helmimods
        run: |
          cd $GITHUB_WORKSPACE/workspace
          rm -f $GITHUB_WORKSPACE/workspace/README.md
          wget https://raw.githubusercontent.com/helmiau/HelmiWrt-OS-Immortal/main/README.md
          echo "Mods loaded succesfully, resuming build"
          echo "status=success" >> $GITHUB_OUTPUT

      - name: Pushing Update for ${{ matrix.BSITE }} Repo
        if: steps.helmimods.outputs.status == 'success' && !cancelled()
        uses: dmnemec/copy_file_to_another_repo_action@main
        env:
          API_TOKEN_GITHUB: ${{ secrets.HELMIWRT_RW }}
        with:
          source_file: workspace/README.md
          destination_repo: ${{ env.UP_USERNEW }}/${{ matrix.BSITE }}
          destination_branch: main
          user_email: ${{ env.BMAIL }}
          user_name: ${{ env.REPO_OWNER }}
          commit_message: 'Update HelmiWrt OS ${{ env.BUILD_DATE }}'
